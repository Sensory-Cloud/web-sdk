// source: v1/video/video.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var validate_validate_pb = require('../../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var common_common_pb = require('../../common/common_pb.js');
goog.object.extend(proto, common_common_pb);
goog.exportSymbol('proto.sensory.api.v1.video.AuthenticateConfig', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.AuthenticateRequest', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.AuthenticateRequest.StreamingrequestCase', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.AuthenticateResponse', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.CreateEnrollmentConfig', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.CreateEnrollmentRequest', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.CreateEnrollmentRequest.StreamingrequestCase', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.CreateEnrollmentResponse', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.GetModelsRequest', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.GetModelsResponse', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.LivenessRecognitionResponse', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.RecognitionThreshold', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.ValidateRecognitionConfig', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.ValidateRecognitionRequest', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.ValidateRecognitionRequest.StreamingrequestCase', null, global);
goog.exportSymbol('proto.sensory.api.v1.video.VideoModel', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.video.VideoModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensory.api.v1.video.VideoModel.repeatedFields_, null);
};
goog.inherits(proto.sensory.api.v1.video.VideoModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.video.VideoModel.displayName = 'proto.sensory.api.v1.video.VideoModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.video.GetModelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.video.GetModelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.video.GetModelsRequest.displayName = 'proto.sensory.api.v1.video.GetModelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.video.GetModelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensory.api.v1.video.GetModelsResponse.repeatedFields_, null);
};
goog.inherits(proto.sensory.api.v1.video.GetModelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.video.GetModelsResponse.displayName = 'proto.sensory.api.v1.video.GetModelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sensory.api.v1.video.CreateEnrollmentRequest.oneofGroups_);
};
goog.inherits(proto.sensory.api.v1.video.CreateEnrollmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.video.CreateEnrollmentRequest.displayName = 'proto.sensory.api.v1.video.CreateEnrollmentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.video.AuthenticateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sensory.api.v1.video.AuthenticateRequest.oneofGroups_);
};
goog.inherits(proto.sensory.api.v1.video.AuthenticateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.video.AuthenticateRequest.displayName = 'proto.sensory.api.v1.video.AuthenticateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sensory.api.v1.video.ValidateRecognitionRequest.oneofGroups_);
};
goog.inherits(proto.sensory.api.v1.video.ValidateRecognitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.video.ValidateRecognitionRequest.displayName = 'proto.sensory.api.v1.video.ValidateRecognitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.video.CreateEnrollmentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.video.CreateEnrollmentResponse.displayName = 'proto.sensory.api.v1.video.CreateEnrollmentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.video.AuthenticateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.video.AuthenticateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.video.AuthenticateResponse.displayName = 'proto.sensory.api.v1.video.AuthenticateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.video.LivenessRecognitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.video.LivenessRecognitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.video.LivenessRecognitionResponse.displayName = 'proto.sensory.api.v1.video.LivenessRecognitionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.video.CreateEnrollmentConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.video.CreateEnrollmentConfig.displayName = 'proto.sensory.api.v1.video.CreateEnrollmentConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.video.AuthenticateConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.video.AuthenticateConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.video.AuthenticateConfig.displayName = 'proto.sensory.api.v1.video.AuthenticateConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.video.ValidateRecognitionConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.video.ValidateRecognitionConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.video.ValidateRecognitionConfig.displayName = 'proto.sensory.api.v1.video.ValidateRecognitionConfig';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensory.api.v1.video.VideoModel.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.video.VideoModel.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.video.VideoModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.video.VideoModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.VideoModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isenrollable: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    modeltype: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fixedobject: jspb.Message.getFieldWithDefault(msg, 4, ""),
    versionsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    technology: jspb.Message.getFieldWithDefault(msg, 6, 0),
    islivenesssupported: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.video.VideoModel}
 */
proto.sensory.api.v1.video.VideoModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.video.VideoModel;
  return proto.sensory.api.v1.video.VideoModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.video.VideoModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.video.VideoModel}
 */
proto.sensory.api.v1.video.VideoModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsenrollable(value);
      break;
    case 3:
      var value = /** @type {!proto.sensory.api.common.ModelType} */ (reader.readEnum());
      msg.setModeltype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFixedobject(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addVersions(value);
      break;
    case 6:
      var value = /** @type {!proto.sensory.api.common.TechnologyType} */ (reader.readEnum());
      msg.setTechnology(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIslivenesssupported(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.VideoModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.video.VideoModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.video.VideoModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.VideoModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsenrollable();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getModeltype();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFixedobject();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getVersionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getTechnology();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getIslivenesssupported();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.sensory.api.v1.video.VideoModel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.video.VideoModel} returns this
 */
proto.sensory.api.v1.video.VideoModel.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool isEnrollable = 2;
 * @return {boolean}
 */
proto.sensory.api.v1.video.VideoModel.prototype.getIsenrollable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sensory.api.v1.video.VideoModel} returns this
 */
proto.sensory.api.v1.video.VideoModel.prototype.setIsenrollable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional sensory.api.common.ModelType modelType = 3;
 * @return {!proto.sensory.api.common.ModelType}
 */
proto.sensory.api.v1.video.VideoModel.prototype.getModeltype = function() {
  return /** @type {!proto.sensory.api.common.ModelType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.sensory.api.common.ModelType} value
 * @return {!proto.sensory.api.v1.video.VideoModel} returns this
 */
proto.sensory.api.v1.video.VideoModel.prototype.setModeltype = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string fixedObject = 4;
 * @return {string}
 */
proto.sensory.api.v1.video.VideoModel.prototype.getFixedobject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.video.VideoModel} returns this
 */
proto.sensory.api.v1.video.VideoModel.prototype.setFixedobject = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string versions = 5;
 * @return {!Array<string>}
 */
proto.sensory.api.v1.video.VideoModel.prototype.getVersionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.sensory.api.v1.video.VideoModel} returns this
 */
proto.sensory.api.v1.video.VideoModel.prototype.setVersionsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sensory.api.v1.video.VideoModel} returns this
 */
proto.sensory.api.v1.video.VideoModel.prototype.addVersions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensory.api.v1.video.VideoModel} returns this
 */
proto.sensory.api.v1.video.VideoModel.prototype.clearVersionsList = function() {
  return this.setVersionsList([]);
};


/**
 * optional sensory.api.common.TechnologyType technology = 6;
 * @return {!proto.sensory.api.common.TechnologyType}
 */
proto.sensory.api.v1.video.VideoModel.prototype.getTechnology = function() {
  return /** @type {!proto.sensory.api.common.TechnologyType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.sensory.api.common.TechnologyType} value
 * @return {!proto.sensory.api.v1.video.VideoModel} returns this
 */
proto.sensory.api.v1.video.VideoModel.prototype.setTechnology = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional bool isLivenessSupported = 7;
 * @return {boolean}
 */
proto.sensory.api.v1.video.VideoModel.prototype.getIslivenesssupported = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sensory.api.v1.video.VideoModel} returns this
 */
proto.sensory.api.v1.video.VideoModel.prototype.setIslivenesssupported = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.video.GetModelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.video.GetModelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.video.GetModelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.GetModelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.video.GetModelsRequest}
 */
proto.sensory.api.v1.video.GetModelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.video.GetModelsRequest;
  return proto.sensory.api.v1.video.GetModelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.video.GetModelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.video.GetModelsRequest}
 */
proto.sensory.api.v1.video.GetModelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.GetModelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.video.GetModelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.video.GetModelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.GetModelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensory.api.v1.video.GetModelsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.video.GetModelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.video.GetModelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.video.GetModelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.GetModelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelsList: jspb.Message.toObjectList(msg.getModelsList(),
    proto.sensory.api.v1.video.VideoModel.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.video.GetModelsResponse}
 */
proto.sensory.api.v1.video.GetModelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.video.GetModelsResponse;
  return proto.sensory.api.v1.video.GetModelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.video.GetModelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.video.GetModelsResponse}
 */
proto.sensory.api.v1.video.GetModelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sensory.api.v1.video.VideoModel;
      reader.readMessage(value,proto.sensory.api.v1.video.VideoModel.deserializeBinaryFromReader);
      msg.addModels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.GetModelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.video.GetModelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.video.GetModelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.GetModelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sensory.api.v1.video.VideoModel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VideoModel models = 1;
 * @return {!Array<!proto.sensory.api.v1.video.VideoModel>}
 */
proto.sensory.api.v1.video.GetModelsResponse.prototype.getModelsList = function() {
  return /** @type{!Array<!proto.sensory.api.v1.video.VideoModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensory.api.v1.video.VideoModel, 1));
};


/**
 * @param {!Array<!proto.sensory.api.v1.video.VideoModel>} value
 * @return {!proto.sensory.api.v1.video.GetModelsResponse} returns this
*/
proto.sensory.api.v1.video.GetModelsResponse.prototype.setModelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sensory.api.v1.video.VideoModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensory.api.v1.video.VideoModel}
 */
proto.sensory.api.v1.video.GetModelsResponse.prototype.addModels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sensory.api.v1.video.VideoModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensory.api.v1.video.GetModelsResponse} returns this
 */
proto.sensory.api.v1.video.GetModelsResponse.prototype.clearModelsList = function() {
  return this.setModelsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.StreamingrequestCase = {
  STREAMINGREQUEST_NOT_SET: 0,
  CONFIG: 1,
  IMAGECONTENT: 2
};

/**
 * @return {proto.sensory.api.v1.video.CreateEnrollmentRequest.StreamingrequestCase}
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.prototype.getStreamingrequestCase = function() {
  return /** @type {proto.sensory.api.v1.video.CreateEnrollmentRequest.StreamingrequestCase} */(jspb.Message.computeOneofCase(this, proto.sensory.api.v1.video.CreateEnrollmentRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.video.CreateEnrollmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.video.CreateEnrollmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.sensory.api.v1.video.CreateEnrollmentConfig.toObject(includeInstance, f),
    imagecontent: msg.getImagecontent_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentRequest}
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.video.CreateEnrollmentRequest;
  return proto.sensory.api.v1.video.CreateEnrollmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.video.CreateEnrollmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentRequest}
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sensory.api.v1.video.CreateEnrollmentConfig;
      reader.readMessage(value,proto.sensory.api.v1.video.CreateEnrollmentConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImagecontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.video.CreateEnrollmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.video.CreateEnrollmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sensory.api.v1.video.CreateEnrollmentConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional CreateEnrollmentConfig config = 1;
 * @return {?proto.sensory.api.v1.video.CreateEnrollmentConfig}
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.prototype.getConfig = function() {
  return /** @type{?proto.sensory.api.v1.video.CreateEnrollmentConfig} */ (
    jspb.Message.getWrapperField(this, proto.sensory.api.v1.video.CreateEnrollmentConfig, 1));
};


/**
 * @param {?proto.sensory.api.v1.video.CreateEnrollmentConfig|undefined} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentRequest} returns this
*/
proto.sensory.api.v1.video.CreateEnrollmentRequest.prototype.setConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.sensory.api.v1.video.CreateEnrollmentRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentRequest} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes imageContent = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.prototype.getImagecontent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes imageContent = 2;
 * This is a type-conversion wrapper around `getImagecontent()`
 * @return {string}
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.prototype.getImagecontent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImagecontent()));
};


/**
 * optional bytes imageContent = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImagecontent()`
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.prototype.getImagecontent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImagecontent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentRequest} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.prototype.setImagecontent = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.sensory.api.v1.video.CreateEnrollmentRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentRequest} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.prototype.clearImagecontent = function() {
  return jspb.Message.setOneofField(this, 2, proto.sensory.api.v1.video.CreateEnrollmentRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.video.CreateEnrollmentRequest.prototype.hasImagecontent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sensory.api.v1.video.AuthenticateRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.sensory.api.v1.video.AuthenticateRequest.StreamingrequestCase = {
  STREAMINGREQUEST_NOT_SET: 0,
  CONFIG: 1,
  IMAGECONTENT: 2
};

/**
 * @return {proto.sensory.api.v1.video.AuthenticateRequest.StreamingrequestCase}
 */
proto.sensory.api.v1.video.AuthenticateRequest.prototype.getStreamingrequestCase = function() {
  return /** @type {proto.sensory.api.v1.video.AuthenticateRequest.StreamingrequestCase} */(jspb.Message.computeOneofCase(this, proto.sensory.api.v1.video.AuthenticateRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.video.AuthenticateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.video.AuthenticateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.video.AuthenticateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.AuthenticateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.sensory.api.v1.video.AuthenticateConfig.toObject(includeInstance, f),
    imagecontent: msg.getImagecontent_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.video.AuthenticateRequest}
 */
proto.sensory.api.v1.video.AuthenticateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.video.AuthenticateRequest;
  return proto.sensory.api.v1.video.AuthenticateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.video.AuthenticateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.video.AuthenticateRequest}
 */
proto.sensory.api.v1.video.AuthenticateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sensory.api.v1.video.AuthenticateConfig;
      reader.readMessage(value,proto.sensory.api.v1.video.AuthenticateConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImagecontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.AuthenticateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.video.AuthenticateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.video.AuthenticateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.AuthenticateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sensory.api.v1.video.AuthenticateConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional AuthenticateConfig config = 1;
 * @return {?proto.sensory.api.v1.video.AuthenticateConfig}
 */
proto.sensory.api.v1.video.AuthenticateRequest.prototype.getConfig = function() {
  return /** @type{?proto.sensory.api.v1.video.AuthenticateConfig} */ (
    jspb.Message.getWrapperField(this, proto.sensory.api.v1.video.AuthenticateConfig, 1));
};


/**
 * @param {?proto.sensory.api.v1.video.AuthenticateConfig|undefined} value
 * @return {!proto.sensory.api.v1.video.AuthenticateRequest} returns this
*/
proto.sensory.api.v1.video.AuthenticateRequest.prototype.setConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.sensory.api.v1.video.AuthenticateRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.video.AuthenticateRequest} returns this
 */
proto.sensory.api.v1.video.AuthenticateRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.video.AuthenticateRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes imageContent = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sensory.api.v1.video.AuthenticateRequest.prototype.getImagecontent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes imageContent = 2;
 * This is a type-conversion wrapper around `getImagecontent()`
 * @return {string}
 */
proto.sensory.api.v1.video.AuthenticateRequest.prototype.getImagecontent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImagecontent()));
};


/**
 * optional bytes imageContent = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImagecontent()`
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.AuthenticateRequest.prototype.getImagecontent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImagecontent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sensory.api.v1.video.AuthenticateRequest} returns this
 */
proto.sensory.api.v1.video.AuthenticateRequest.prototype.setImagecontent = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.sensory.api.v1.video.AuthenticateRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.sensory.api.v1.video.AuthenticateRequest} returns this
 */
proto.sensory.api.v1.video.AuthenticateRequest.prototype.clearImagecontent = function() {
  return jspb.Message.setOneofField(this, 2, proto.sensory.api.v1.video.AuthenticateRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.video.AuthenticateRequest.prototype.hasImagecontent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.StreamingrequestCase = {
  STREAMINGREQUEST_NOT_SET: 0,
  CONFIG: 1,
  IMAGECONTENT: 2
};

/**
 * @return {proto.sensory.api.v1.video.ValidateRecognitionRequest.StreamingrequestCase}
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.prototype.getStreamingrequestCase = function() {
  return /** @type {proto.sensory.api.v1.video.ValidateRecognitionRequest.StreamingrequestCase} */(jspb.Message.computeOneofCase(this, proto.sensory.api.v1.video.ValidateRecognitionRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.video.ValidateRecognitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.video.ValidateRecognitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.sensory.api.v1.video.ValidateRecognitionConfig.toObject(includeInstance, f),
    imagecontent: msg.getImagecontent_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.video.ValidateRecognitionRequest}
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.video.ValidateRecognitionRequest;
  return proto.sensory.api.v1.video.ValidateRecognitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.video.ValidateRecognitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.video.ValidateRecognitionRequest}
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sensory.api.v1.video.ValidateRecognitionConfig;
      reader.readMessage(value,proto.sensory.api.v1.video.ValidateRecognitionConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImagecontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.video.ValidateRecognitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.video.ValidateRecognitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sensory.api.v1.video.ValidateRecognitionConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional ValidateRecognitionConfig config = 1;
 * @return {?proto.sensory.api.v1.video.ValidateRecognitionConfig}
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.prototype.getConfig = function() {
  return /** @type{?proto.sensory.api.v1.video.ValidateRecognitionConfig} */ (
    jspb.Message.getWrapperField(this, proto.sensory.api.v1.video.ValidateRecognitionConfig, 1));
};


/**
 * @param {?proto.sensory.api.v1.video.ValidateRecognitionConfig|undefined} value
 * @return {!proto.sensory.api.v1.video.ValidateRecognitionRequest} returns this
*/
proto.sensory.api.v1.video.ValidateRecognitionRequest.prototype.setConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.sensory.api.v1.video.ValidateRecognitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.video.ValidateRecognitionRequest} returns this
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes imageContent = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.prototype.getImagecontent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes imageContent = 2;
 * This is a type-conversion wrapper around `getImagecontent()`
 * @return {string}
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.prototype.getImagecontent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImagecontent()));
};


/**
 * optional bytes imageContent = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImagecontent()`
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.prototype.getImagecontent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImagecontent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sensory.api.v1.video.ValidateRecognitionRequest} returns this
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.prototype.setImagecontent = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.sensory.api.v1.video.ValidateRecognitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.sensory.api.v1.video.ValidateRecognitionRequest} returns this
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.prototype.clearImagecontent = function() {
  return jspb.Message.setOneofField(this, 2, proto.sensory.api.v1.video.ValidateRecognitionRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.video.ValidateRecognitionRequest.prototype.hasImagecontent = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.video.CreateEnrollmentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.video.CreateEnrollmentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    percentcomplete: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isalive: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    enrollmentid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    modelname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    modelversion: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentResponse}
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.video.CreateEnrollmentResponse;
  return proto.sensory.api.v1.video.CreateEnrollmentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.video.CreateEnrollmentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentResponse}
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPercentcomplete(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsalive(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnrollmentid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelversion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.video.CreateEnrollmentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.video.CreateEnrollmentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPercentcomplete();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getIsalive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getEnrollmentid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getModelname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getModelversion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 percentComplete = 1;
 * @return {number}
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.prototype.getPercentcomplete = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentResponse} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.prototype.setPercentcomplete = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool isAlive = 2;
 * @return {boolean}
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.prototype.getIsalive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentResponse} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.prototype.setIsalive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string enrollmentId = 3;
 * @return {string}
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.prototype.getEnrollmentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentResponse} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.prototype.setEnrollmentid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string modelName = 4;
 * @return {string}
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.prototype.getModelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentResponse} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.prototype.setModelname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string modelVersion = 5;
 * @return {string}
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.prototype.getModelversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentResponse} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentResponse.prototype.setModelversion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.video.AuthenticateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.video.AuthenticateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.video.AuthenticateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.AuthenticateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    isalive: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    token: (f = msg.getToken()) && common_common_pb.TokenResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.video.AuthenticateResponse}
 */
proto.sensory.api.v1.video.AuthenticateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.video.AuthenticateResponse;
  return proto.sensory.api.v1.video.AuthenticateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.video.AuthenticateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.video.AuthenticateResponse}
 */
proto.sensory.api.v1.video.AuthenticateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsalive(value);
      break;
    case 4:
      var value = new common_common_pb.TokenResponse;
      reader.readMessage(value,common_common_pb.TokenResponse.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.AuthenticateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.video.AuthenticateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.video.AuthenticateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.AuthenticateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getIsalive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.TokenResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.sensory.api.v1.video.AuthenticateResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sensory.api.v1.video.AuthenticateResponse} returns this
 */
proto.sensory.api.v1.video.AuthenticateResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional float score = 2;
 * @return {number}
 */
proto.sensory.api.v1.video.AuthenticateResponse.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sensory.api.v1.video.AuthenticateResponse} returns this
 */
proto.sensory.api.v1.video.AuthenticateResponse.prototype.setScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional bool isAlive = 3;
 * @return {boolean}
 */
proto.sensory.api.v1.video.AuthenticateResponse.prototype.getIsalive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sensory.api.v1.video.AuthenticateResponse} returns this
 */
proto.sensory.api.v1.video.AuthenticateResponse.prototype.setIsalive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional sensory.api.common.TokenResponse token = 4;
 * @return {?proto.sensory.api.common.TokenResponse}
 */
proto.sensory.api.v1.video.AuthenticateResponse.prototype.getToken = function() {
  return /** @type{?proto.sensory.api.common.TokenResponse} */ (
    jspb.Message.getWrapperField(this, common_common_pb.TokenResponse, 4));
};


/**
 * @param {?proto.sensory.api.common.TokenResponse|undefined} value
 * @return {!proto.sensory.api.v1.video.AuthenticateResponse} returns this
*/
proto.sensory.api.v1.video.AuthenticateResponse.prototype.setToken = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.video.AuthenticateResponse} returns this
 */
proto.sensory.api.v1.video.AuthenticateResponse.prototype.clearToken = function() {
  return this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.video.AuthenticateResponse.prototype.hasToken = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.video.LivenessRecognitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.video.LivenessRecognitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.video.LivenessRecognitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.LivenessRecognitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isalive: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.video.LivenessRecognitionResponse}
 */
proto.sensory.api.v1.video.LivenessRecognitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.video.LivenessRecognitionResponse;
  return proto.sensory.api.v1.video.LivenessRecognitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.video.LivenessRecognitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.video.LivenessRecognitionResponse}
 */
proto.sensory.api.v1.video.LivenessRecognitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsalive(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.LivenessRecognitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.video.LivenessRecognitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.video.LivenessRecognitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.LivenessRecognitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsalive();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional bool isAlive = 1;
 * @return {boolean}
 */
proto.sensory.api.v1.video.LivenessRecognitionResponse.prototype.getIsalive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sensory.api.v1.video.LivenessRecognitionResponse} returns this
 */
proto.sensory.api.v1.video.LivenessRecognitionResponse.prototype.setIsalive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional float score = 2;
 * @return {number}
 */
proto.sensory.api.v1.video.LivenessRecognitionResponse.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sensory.api.v1.video.LivenessRecognitionResponse} returns this
 */
proto.sensory.api.v1.video.LivenessRecognitionResponse.prototype.setScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.video.CreateEnrollmentConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.video.CreateEnrollmentConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    modelname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    islivenessenabled: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    livenessthreshold: jspb.Message.getFieldWithDefault(msg, 6, 0),
    compression: (f = msg.getCompression()) && common_common_pb.CompressionConfiguration.toObject(includeInstance, f),
    referenceid: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentConfig}
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.video.CreateEnrollmentConfig;
  return proto.sensory.api.v1.video.CreateEnrollmentConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.video.CreateEnrollmentConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentConfig}
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIslivenessenabled(value);
      break;
    case 6:
      var value = /** @type {!proto.sensory.api.v1.video.RecognitionThreshold} */ (reader.readEnum());
      msg.setLivenessthreshold(value);
      break;
    case 7:
      var value = new common_common_pb.CompressionConfiguration;
      reader.readMessage(value,common_common_pb.CompressionConfiguration.deserializeBinaryFromReader);
      msg.setCompression(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.video.CreateEnrollmentConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.video.CreateEnrollmentConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModelname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIslivenessenabled();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getLivenessthreshold();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getCompression();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_common_pb.CompressionConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getReferenceid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string userId = 1;
 * @return {string}
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentConfig} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string deviceId = 2;
 * @return {string}
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.getDeviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentConfig} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.setDeviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string modelName = 3;
 * @return {string}
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.getModelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentConfig} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.setModelname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentConfig} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool isLivenessEnabled = 5;
 * @return {boolean}
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.getIslivenessenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentConfig} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.setIslivenessenabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional RecognitionThreshold livenessThreshold = 6;
 * @return {!proto.sensory.api.v1.video.RecognitionThreshold}
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.getLivenessthreshold = function() {
  return /** @type {!proto.sensory.api.v1.video.RecognitionThreshold} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.sensory.api.v1.video.RecognitionThreshold} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentConfig} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.setLivenessthreshold = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional sensory.api.common.CompressionConfiguration compression = 7;
 * @return {?proto.sensory.api.common.CompressionConfiguration}
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.getCompression = function() {
  return /** @type{?proto.sensory.api.common.CompressionConfiguration} */ (
    jspb.Message.getWrapperField(this, common_common_pb.CompressionConfiguration, 7));
};


/**
 * @param {?proto.sensory.api.common.CompressionConfiguration|undefined} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentConfig} returns this
*/
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.setCompression = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentConfig} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.clearCompression = function() {
  return this.setCompression(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.hasCompression = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string referenceId = 8;
 * @return {string}
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.getReferenceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.video.CreateEnrollmentConfig} returns this
 */
proto.sensory.api.v1.video.CreateEnrollmentConfig.prototype.setReferenceid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.video.AuthenticateConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.video.AuthenticateConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.video.AuthenticateConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.AuthenticateConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    enrollmentid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    islivenessenabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    livenessthreshold: jspb.Message.getFieldWithDefault(msg, 3, 0),
    compression: (f = msg.getCompression()) && common_common_pb.CompressionConfiguration.toObject(includeInstance, f),
    doincludetoken: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.video.AuthenticateConfig}
 */
proto.sensory.api.v1.video.AuthenticateConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.video.AuthenticateConfig;
  return proto.sensory.api.v1.video.AuthenticateConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.video.AuthenticateConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.video.AuthenticateConfig}
 */
proto.sensory.api.v1.video.AuthenticateConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnrollmentid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIslivenessenabled(value);
      break;
    case 3:
      var value = /** @type {!proto.sensory.api.v1.video.RecognitionThreshold} */ (reader.readEnum());
      msg.setLivenessthreshold(value);
      break;
    case 4:
      var value = new common_common_pb.CompressionConfiguration;
      reader.readMessage(value,common_common_pb.CompressionConfiguration.deserializeBinaryFromReader);
      msg.setCompression(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDoincludetoken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.AuthenticateConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.video.AuthenticateConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.video.AuthenticateConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.AuthenticateConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnrollmentid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIslivenessenabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getLivenessthreshold();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getCompression();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.CompressionConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getDoincludetoken();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string enrollmentId = 1;
 * @return {string}
 */
proto.sensory.api.v1.video.AuthenticateConfig.prototype.getEnrollmentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.video.AuthenticateConfig} returns this
 */
proto.sensory.api.v1.video.AuthenticateConfig.prototype.setEnrollmentid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool isLivenessEnabled = 2;
 * @return {boolean}
 */
proto.sensory.api.v1.video.AuthenticateConfig.prototype.getIslivenessenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sensory.api.v1.video.AuthenticateConfig} returns this
 */
proto.sensory.api.v1.video.AuthenticateConfig.prototype.setIslivenessenabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional RecognitionThreshold livenessThreshold = 3;
 * @return {!proto.sensory.api.v1.video.RecognitionThreshold}
 */
proto.sensory.api.v1.video.AuthenticateConfig.prototype.getLivenessthreshold = function() {
  return /** @type {!proto.sensory.api.v1.video.RecognitionThreshold} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.sensory.api.v1.video.RecognitionThreshold} value
 * @return {!proto.sensory.api.v1.video.AuthenticateConfig} returns this
 */
proto.sensory.api.v1.video.AuthenticateConfig.prototype.setLivenessthreshold = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional sensory.api.common.CompressionConfiguration compression = 4;
 * @return {?proto.sensory.api.common.CompressionConfiguration}
 */
proto.sensory.api.v1.video.AuthenticateConfig.prototype.getCompression = function() {
  return /** @type{?proto.sensory.api.common.CompressionConfiguration} */ (
    jspb.Message.getWrapperField(this, common_common_pb.CompressionConfiguration, 4));
};


/**
 * @param {?proto.sensory.api.common.CompressionConfiguration|undefined} value
 * @return {!proto.sensory.api.v1.video.AuthenticateConfig} returns this
*/
proto.sensory.api.v1.video.AuthenticateConfig.prototype.setCompression = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.video.AuthenticateConfig} returns this
 */
proto.sensory.api.v1.video.AuthenticateConfig.prototype.clearCompression = function() {
  return this.setCompression(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.video.AuthenticateConfig.prototype.hasCompression = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool doIncludeToken = 5;
 * @return {boolean}
 */
proto.sensory.api.v1.video.AuthenticateConfig.prototype.getDoincludetoken = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sensory.api.v1.video.AuthenticateConfig} returns this
 */
proto.sensory.api.v1.video.AuthenticateConfig.prototype.setDoincludetoken = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.video.ValidateRecognitionConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.video.ValidateRecognitionConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.video.ValidateRecognitionConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.ValidateRecognitionConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    threshold: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.video.ValidateRecognitionConfig}
 */
proto.sensory.api.v1.video.ValidateRecognitionConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.video.ValidateRecognitionConfig;
  return proto.sensory.api.v1.video.ValidateRecognitionConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.video.ValidateRecognitionConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.video.ValidateRecognitionConfig}
 */
proto.sensory.api.v1.video.ValidateRecognitionConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {!proto.sensory.api.v1.video.RecognitionThreshold} */ (reader.readEnum());
      msg.setThreshold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.video.ValidateRecognitionConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.video.ValidateRecognitionConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.video.ValidateRecognitionConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.video.ValidateRecognitionConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getThreshold();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string modelName = 1;
 * @return {string}
 */
proto.sensory.api.v1.video.ValidateRecognitionConfig.prototype.getModelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.video.ValidateRecognitionConfig} returns this
 */
proto.sensory.api.v1.video.ValidateRecognitionConfig.prototype.setModelname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userId = 2;
 * @return {string}
 */
proto.sensory.api.v1.video.ValidateRecognitionConfig.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.video.ValidateRecognitionConfig} returns this
 */
proto.sensory.api.v1.video.ValidateRecognitionConfig.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional RecognitionThreshold threshold = 3;
 * @return {!proto.sensory.api.v1.video.RecognitionThreshold}
 */
proto.sensory.api.v1.video.ValidateRecognitionConfig.prototype.getThreshold = function() {
  return /** @type {!proto.sensory.api.v1.video.RecognitionThreshold} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.sensory.api.v1.video.RecognitionThreshold} value
 * @return {!proto.sensory.api.v1.video.ValidateRecognitionConfig} returns this
 */
proto.sensory.api.v1.video.ValidateRecognitionConfig.prototype.setThreshold = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.sensory.api.v1.video.RecognitionThreshold = {
  LOW: 0,
  MEDIUM: 1,
  HIGH: 2,
  HIGHEST: 3
};

goog.object.extend(exports, proto.sensory.api.v1.video);
