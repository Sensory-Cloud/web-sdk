// source: v1/management/server.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var validate_validate_pb = require('../../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var common_common_pb = require('../../common/common_pb.js');
goog.object.extend(proto, common_common_pb);
var v1_management_cluster_pb = require('../../v1/management/cluster_pb.js');
goog.object.extend(proto, v1_management_cluster_pb);
var v1_management_tenant_pb = require('../../v1/management/tenant_pb.js');
goog.object.extend(proto, v1_management_tenant_pb);
goog.exportSymbol('proto.sensory.api.v1.management.DataPersistenceConfig', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.DataPersistenceConfig.PersistencetypeCase', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.DataPersistenceLocalConfig', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.DataPersistenceS3Config', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.DeviceEnrollmentConfig', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.DeviceEnrollmentSecurityLevels', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.DeviceSummary', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.HeartbeatResponse', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.ServerConfig', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.ServerConfigRequest', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.ServerHeartbeatRequest', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.ServerListRequest', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.ServerListResponse', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.ServerResponse', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.UserSummary', null, global);
goog.exportSymbol('proto.sensory.api.v1.management.Void', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.management.ServerConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.management.ServerConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.management.ServerConfigRequest.displayName = 'proto.sensory.api.v1.management.ServerConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.management.ServerConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensory.api.v1.management.ServerConfig.repeatedFields_, null);
};
goog.inherits(proto.sensory.api.v1.management.ServerConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.management.ServerConfig.displayName = 'proto.sensory.api.v1.management.ServerConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.management.DataPersistenceConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sensory.api.v1.management.DataPersistenceConfig.oneofGroups_);
};
goog.inherits(proto.sensory.api.v1.management.DataPersistenceConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.management.DataPersistenceConfig.displayName = 'proto.sensory.api.v1.management.DataPersistenceConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.management.ServerHeartbeatRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.management.ServerHeartbeatRequest.displayName = 'proto.sensory.api.v1.management.ServerHeartbeatRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.management.HeartbeatResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.management.HeartbeatResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.management.HeartbeatResponse.displayName = 'proto.sensory.api.v1.management.HeartbeatResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.management.UserSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.management.UserSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.management.UserSummary.displayName = 'proto.sensory.api.v1.management.UserSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.management.DeviceSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.management.DeviceSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.management.DeviceSummary.displayName = 'proto.sensory.api.v1.management.DeviceSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.management.DeviceEnrollmentConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.management.DeviceEnrollmentConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.management.DeviceEnrollmentConfig.displayName = 'proto.sensory.api.v1.management.DeviceEnrollmentConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.management.DataPersistenceLocalConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.management.DataPersistenceLocalConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.management.DataPersistenceLocalConfig.displayName = 'proto.sensory.api.v1.management.DataPersistenceLocalConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.management.DataPersistenceS3Config = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.management.DataPersistenceS3Config, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.management.DataPersistenceS3Config.displayName = 'proto.sensory.api.v1.management.DataPersistenceS3Config';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.management.ServerListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.management.ServerListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.management.ServerListRequest.displayName = 'proto.sensory.api.v1.management.ServerListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.management.ServerListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensory.api.v1.management.ServerListResponse.repeatedFields_, null);
};
goog.inherits(proto.sensory.api.v1.management.ServerListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.management.ServerListResponse.displayName = 'proto.sensory.api.v1.management.ServerListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensory.api.v1.management.ServerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensory.api.v1.management.ServerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensory.api.v1.management.ServerResponse.displayName = 'proto.sensory.api.v1.management.ServerResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.management.ServerConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.management.ServerConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.management.ServerConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.ServerConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.management.ServerConfigRequest}
 */
proto.sensory.api.v1.management.ServerConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.management.ServerConfigRequest;
  return proto.sensory.api.v1.management.ServerConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.management.ServerConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.management.ServerConfigRequest}
 */
proto.sensory.api.v1.management.ServerConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.management.ServerConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.management.ServerConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.management.ServerConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.ServerConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensory.api.v1.management.ServerConfig.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.management.ServerConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.management.ServerConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.ServerConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenant: (f = msg.getTenant()) && v1_management_tenant_pb.TenantResponse.toObject(includeInstance, f),
    cluster: (f = msg.getCluster()) && v1_management_cluster_pb.ClusterResponse.toObject(includeInstance, f),
    featureflagsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    datapersistence: (f = msg.getDatapersistence()) && proto.sensory.api.v1.management.DataPersistenceConfig.toObject(includeInstance, f),
    oauthtokenissuer: jspb.Message.getFieldWithDefault(msg, 6, ""),
    grpcport: jspb.Message.getFieldWithDefault(msg, 7, ""),
    webgrpcport: jspb.Message.getFieldWithDefault(msg, 8, ""),
    tritonhost: jspb.Message.getFieldWithDefault(msg, 9, ""),
    databaseurl: jspb.Message.getFieldWithDefault(msg, 10, ""),
    deviceenrollmentconfig: (f = msg.getDeviceenrollmentconfig()) && proto.sensory.api.v1.management.DeviceEnrollmentConfig.toObject(includeInstance, f),
    sentryurl: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.management.ServerConfig}
 */
proto.sensory.api.v1.management.ServerConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.management.ServerConfig;
  return proto.sensory.api.v1.management.ServerConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.management.ServerConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.management.ServerConfig}
 */
proto.sensory.api.v1.management.ServerConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new v1_management_tenant_pb.TenantResponse;
      reader.readMessage(value,v1_management_tenant_pb.TenantResponse.deserializeBinaryFromReader);
      msg.setTenant(value);
      break;
    case 2:
      var value = new v1_management_cluster_pb.ClusterResponse;
      reader.readMessage(value,v1_management_cluster_pb.ClusterResponse.deserializeBinaryFromReader);
      msg.setCluster(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFeatureflags(values[i]);
      }
      break;
    case 5:
      var value = new proto.sensory.api.v1.management.DataPersistenceConfig;
      reader.readMessage(value,proto.sensory.api.v1.management.DataPersistenceConfig.deserializeBinaryFromReader);
      msg.setDatapersistence(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOauthtokenissuer(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGrpcport(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebgrpcport(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTritonhost(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabaseurl(value);
      break;
    case 11:
      var value = new proto.sensory.api.v1.management.DeviceEnrollmentConfig;
      reader.readMessage(value,proto.sensory.api.v1.management.DeviceEnrollmentConfig.deserializeBinaryFromReader);
      msg.setDeviceenrollmentconfig(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSentryurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.management.ServerConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.management.ServerConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.ServerConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenant();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      v1_management_tenant_pb.TenantResponse.serializeBinaryToWriter
    );
  }
  f = message.getCluster();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      v1_management_cluster_pb.ClusterResponse.serializeBinaryToWriter
    );
  }
  f = message.getFeatureflagsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getDatapersistence();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.sensory.api.v1.management.DataPersistenceConfig.serializeBinaryToWriter
    );
  }
  f = message.getOauthtokenissuer();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getGrpcport();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getWebgrpcport();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTritonhost();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDatabaseurl();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDeviceenrollmentconfig();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.sensory.api.v1.management.DeviceEnrollmentConfig.serializeBinaryToWriter
    );
  }
  f = message.getSentryurl();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional TenantResponse tenant = 1;
 * @return {?proto.sensory.api.v1.management.TenantResponse}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.getTenant = function() {
  return /** @type{?proto.sensory.api.v1.management.TenantResponse} */ (
    jspb.Message.getWrapperField(this, v1_management_tenant_pb.TenantResponse, 1));
};


/**
 * @param {?proto.sensory.api.v1.management.TenantResponse|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
*/
proto.sensory.api.v1.management.ServerConfig.prototype.setTenant = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
 */
proto.sensory.api.v1.management.ServerConfig.prototype.clearTenant = function() {
  return this.setTenant(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.hasTenant = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ClusterResponse cluster = 2;
 * @return {?proto.sensory.api.v1.management.ClusterResponse}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.getCluster = function() {
  return /** @type{?proto.sensory.api.v1.management.ClusterResponse} */ (
    jspb.Message.getWrapperField(this, v1_management_cluster_pb.ClusterResponse, 2));
};


/**
 * @param {?proto.sensory.api.v1.management.ClusterResponse|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
*/
proto.sensory.api.v1.management.ServerConfig.prototype.setCluster = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
 */
proto.sensory.api.v1.management.ServerConfig.prototype.clearCluster = function() {
  return this.setCluster(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.hasCluster = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated int32 featureFlags = 3;
 * @return {!Array<number>}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.getFeatureflagsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
 */
proto.sensory.api.v1.management.ServerConfig.prototype.setFeatureflagsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
 */
proto.sensory.api.v1.management.ServerConfig.prototype.addFeatureflags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
 */
proto.sensory.api.v1.management.ServerConfig.prototype.clearFeatureflagsList = function() {
  return this.setFeatureflagsList([]);
};


/**
 * optional DataPersistenceConfig dataPersistence = 5;
 * @return {?proto.sensory.api.v1.management.DataPersistenceConfig}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.getDatapersistence = function() {
  return /** @type{?proto.sensory.api.v1.management.DataPersistenceConfig} */ (
    jspb.Message.getWrapperField(this, proto.sensory.api.v1.management.DataPersistenceConfig, 5));
};


/**
 * @param {?proto.sensory.api.v1.management.DataPersistenceConfig|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
*/
proto.sensory.api.v1.management.ServerConfig.prototype.setDatapersistence = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
 */
proto.sensory.api.v1.management.ServerConfig.prototype.clearDatapersistence = function() {
  return this.setDatapersistence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.hasDatapersistence = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string oauthTokenIssuer = 6;
 * @return {string}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.getOauthtokenissuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
 */
proto.sensory.api.v1.management.ServerConfig.prototype.setOauthtokenissuer = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string grpcPort = 7;
 * @return {string}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.getGrpcport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
 */
proto.sensory.api.v1.management.ServerConfig.prototype.setGrpcport = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string webGrpcPort = 8;
 * @return {string}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.getWebgrpcport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
 */
proto.sensory.api.v1.management.ServerConfig.prototype.setWebgrpcport = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string tritonHost = 9;
 * @return {string}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.getTritonhost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
 */
proto.sensory.api.v1.management.ServerConfig.prototype.setTritonhost = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string databaseURL = 10;
 * @return {string}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.getDatabaseurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
 */
proto.sensory.api.v1.management.ServerConfig.prototype.setDatabaseurl = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional DeviceEnrollmentConfig deviceEnrollmentConfig = 11;
 * @return {?proto.sensory.api.v1.management.DeviceEnrollmentConfig}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.getDeviceenrollmentconfig = function() {
  return /** @type{?proto.sensory.api.v1.management.DeviceEnrollmentConfig} */ (
    jspb.Message.getWrapperField(this, proto.sensory.api.v1.management.DeviceEnrollmentConfig, 11));
};


/**
 * @param {?proto.sensory.api.v1.management.DeviceEnrollmentConfig|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
*/
proto.sensory.api.v1.management.ServerConfig.prototype.setDeviceenrollmentconfig = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
 */
proto.sensory.api.v1.management.ServerConfig.prototype.clearDeviceenrollmentconfig = function() {
  return this.setDeviceenrollmentconfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.hasDeviceenrollmentconfig = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string sentryURL = 12;
 * @return {string}
 */
proto.sensory.api.v1.management.ServerConfig.prototype.getSentryurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.ServerConfig} returns this
 */
proto.sensory.api.v1.management.ServerConfig.prototype.setSentryurl = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sensory.api.v1.management.DataPersistenceConfig.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.sensory.api.v1.management.DataPersistenceConfig.PersistencetypeCase = {
  PERSISTENCETYPE_NOT_SET: 0,
  NONE: 1,
  LOCALCONFIG: 2,
  S3CONFIG: 3
};

/**
 * @return {proto.sensory.api.v1.management.DataPersistenceConfig.PersistencetypeCase}
 */
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.getPersistencetypeCase = function() {
  return /** @type {proto.sensory.api.v1.management.DataPersistenceConfig.PersistencetypeCase} */(jspb.Message.computeOneofCase(this, proto.sensory.api.v1.management.DataPersistenceConfig.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.management.DataPersistenceConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.management.DataPersistenceConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.DataPersistenceConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    none: jspb.Message.getFieldWithDefault(msg, 1, 0),
    localconfig: (f = msg.getLocalconfig()) && proto.sensory.api.v1.management.DataPersistenceLocalConfig.toObject(includeInstance, f),
    s3config: (f = msg.getS3config()) && proto.sensory.api.v1.management.DataPersistenceS3Config.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.management.DataPersistenceConfig}
 */
proto.sensory.api.v1.management.DataPersistenceConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.management.DataPersistenceConfig;
  return proto.sensory.api.v1.management.DataPersistenceConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.management.DataPersistenceConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.management.DataPersistenceConfig}
 */
proto.sensory.api.v1.management.DataPersistenceConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensory.api.v1.management.Void} */ (reader.readEnum());
      msg.setNone(value);
      break;
    case 2:
      var value = new proto.sensory.api.v1.management.DataPersistenceLocalConfig;
      reader.readMessage(value,proto.sensory.api.v1.management.DataPersistenceLocalConfig.deserializeBinaryFromReader);
      msg.setLocalconfig(value);
      break;
    case 3:
      var value = new proto.sensory.api.v1.management.DataPersistenceS3Config;
      reader.readMessage(value,proto.sensory.api.v1.management.DataPersistenceS3Config.deserializeBinaryFromReader);
      msg.setS3config(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.management.DataPersistenceConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.management.DataPersistenceConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.DataPersistenceConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.sensory.api.v1.management.Void} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getLocalconfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sensory.api.v1.management.DataPersistenceLocalConfig.serializeBinaryToWriter
    );
  }
  f = message.getS3config();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sensory.api.v1.management.DataPersistenceS3Config.serializeBinaryToWriter
    );
  }
};


/**
 * optional Void none = 1;
 * @return {!proto.sensory.api.v1.management.Void}
 */
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.getNone = function() {
  return /** @type {!proto.sensory.api.v1.management.Void} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensory.api.v1.management.Void} value
 * @return {!proto.sensory.api.v1.management.DataPersistenceConfig} returns this
 */
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.setNone = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.sensory.api.v1.management.DataPersistenceConfig.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.sensory.api.v1.management.DataPersistenceConfig} returns this
 */
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.clearNone = function() {
  return jspb.Message.setOneofField(this, 1, proto.sensory.api.v1.management.DataPersistenceConfig.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.hasNone = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DataPersistenceLocalConfig localConfig = 2;
 * @return {?proto.sensory.api.v1.management.DataPersistenceLocalConfig}
 */
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.getLocalconfig = function() {
  return /** @type{?proto.sensory.api.v1.management.DataPersistenceLocalConfig} */ (
    jspb.Message.getWrapperField(this, proto.sensory.api.v1.management.DataPersistenceLocalConfig, 2));
};


/**
 * @param {?proto.sensory.api.v1.management.DataPersistenceLocalConfig|undefined} value
 * @return {!proto.sensory.api.v1.management.DataPersistenceConfig} returns this
*/
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.setLocalconfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.sensory.api.v1.management.DataPersistenceConfig.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.DataPersistenceConfig} returns this
 */
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.clearLocalconfig = function() {
  return this.setLocalconfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.hasLocalconfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DataPersistenceS3Config s3Config = 3;
 * @return {?proto.sensory.api.v1.management.DataPersistenceS3Config}
 */
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.getS3config = function() {
  return /** @type{?proto.sensory.api.v1.management.DataPersistenceS3Config} */ (
    jspb.Message.getWrapperField(this, proto.sensory.api.v1.management.DataPersistenceS3Config, 3));
};


/**
 * @param {?proto.sensory.api.v1.management.DataPersistenceS3Config|undefined} value
 * @return {!proto.sensory.api.v1.management.DataPersistenceConfig} returns this
*/
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.setS3config = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.sensory.api.v1.management.DataPersistenceConfig.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.DataPersistenceConfig} returns this
 */
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.clearS3config = function() {
  return this.setS3config(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.DataPersistenceConfig.prototype.hasS3config = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.management.ServerHeartbeatRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.management.ServerHeartbeatRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    health: (f = msg.getHealth()) && common_common_pb.ServerHealthResponse.toObject(includeInstance, f),
    system: (f = msg.getSystem()) && common_common_pb.SystemSummary.toObject(includeInstance, f),
    users: (f = msg.getUsers()) && proto.sensory.api.v1.management.UserSummary.toObject(includeInstance, f),
    devices: (f = msg.getDevices()) && proto.sensory.api.v1.management.DeviceSummary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.management.ServerHeartbeatRequest}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.management.ServerHeartbeatRequest;
  return proto.sensory.api.v1.management.ServerHeartbeatRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.management.ServerHeartbeatRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.management.ServerHeartbeatRequest}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 2:
      var value = new common_common_pb.ServerHealthResponse;
      reader.readMessage(value,common_common_pb.ServerHealthResponse.deserializeBinaryFromReader);
      msg.setHealth(value);
      break;
    case 3:
      var value = new common_common_pb.SystemSummary;
      reader.readMessage(value,common_common_pb.SystemSummary.deserializeBinaryFromReader);
      msg.setSystem(value);
      break;
    case 4:
      var value = new proto.sensory.api.v1.management.UserSummary;
      reader.readMessage(value,proto.sensory.api.v1.management.UserSummary.deserializeBinaryFromReader);
      msg.setUsers(value);
      break;
    case 5:
      var value = new proto.sensory.api.v1.management.DeviceSummary;
      reader.readMessage(value,proto.sensory.api.v1.management.DeviceSummary.deserializeBinaryFromReader);
      msg.setDevices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.management.ServerHeartbeatRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.management.ServerHeartbeatRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getHealth();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.ServerHealthResponse.serializeBinaryToWriter
    );
  }
  f = message.getSystem();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.SystemSummary.serializeBinaryToWriter
    );
  }
  f = message.getUsers();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.sensory.api.v1.management.UserSummary.serializeBinaryToWriter
    );
  }
  f = message.getDevices();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.sensory.api.v1.management.DeviceSummary.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp timestamp = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerHeartbeatRequest} returns this
*/
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerHeartbeatRequest} returns this
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensory.api.common.ServerHealthResponse health = 2;
 * @return {?proto.sensory.api.common.ServerHealthResponse}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.getHealth = function() {
  return /** @type{?proto.sensory.api.common.ServerHealthResponse} */ (
    jspb.Message.getWrapperField(this, common_common_pb.ServerHealthResponse, 2));
};


/**
 * @param {?proto.sensory.api.common.ServerHealthResponse|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerHeartbeatRequest} returns this
*/
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.setHealth = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerHeartbeatRequest} returns this
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.clearHealth = function() {
  return this.setHealth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.hasHealth = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensory.api.common.SystemSummary system = 3;
 * @return {?proto.sensory.api.common.SystemSummary}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.getSystem = function() {
  return /** @type{?proto.sensory.api.common.SystemSummary} */ (
    jspb.Message.getWrapperField(this, common_common_pb.SystemSummary, 3));
};


/**
 * @param {?proto.sensory.api.common.SystemSummary|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerHeartbeatRequest} returns this
*/
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.setSystem = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerHeartbeatRequest} returns this
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.clearSystem = function() {
  return this.setSystem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.hasSystem = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UserSummary users = 4;
 * @return {?proto.sensory.api.v1.management.UserSummary}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.getUsers = function() {
  return /** @type{?proto.sensory.api.v1.management.UserSummary} */ (
    jspb.Message.getWrapperField(this, proto.sensory.api.v1.management.UserSummary, 4));
};


/**
 * @param {?proto.sensory.api.v1.management.UserSummary|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerHeartbeatRequest} returns this
*/
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.setUsers = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerHeartbeatRequest} returns this
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.clearUsers = function() {
  return this.setUsers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.hasUsers = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DeviceSummary devices = 5;
 * @return {?proto.sensory.api.v1.management.DeviceSummary}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.getDevices = function() {
  return /** @type{?proto.sensory.api.v1.management.DeviceSummary} */ (
    jspb.Message.getWrapperField(this, proto.sensory.api.v1.management.DeviceSummary, 5));
};


/**
 * @param {?proto.sensory.api.v1.management.DeviceSummary|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerHeartbeatRequest} returns this
*/
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.setDevices = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerHeartbeatRequest} returns this
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.clearDevices = function() {
  return this.setDevices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerHeartbeatRequest.prototype.hasDevices = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.management.HeartbeatResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.management.HeartbeatResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.management.HeartbeatResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.HeartbeatResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.sensory.api.v1.management.ServerConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.management.HeartbeatResponse}
 */
proto.sensory.api.v1.management.HeartbeatResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.management.HeartbeatResponse;
  return proto.sensory.api.v1.management.HeartbeatResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.management.HeartbeatResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.management.HeartbeatResponse}
 */
proto.sensory.api.v1.management.HeartbeatResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sensory.api.v1.management.ServerConfig;
      reader.readMessage(value,proto.sensory.api.v1.management.ServerConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.management.HeartbeatResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.management.HeartbeatResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.management.HeartbeatResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.HeartbeatResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sensory.api.v1.management.ServerConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional ServerConfig config = 1;
 * @return {?proto.sensory.api.v1.management.ServerConfig}
 */
proto.sensory.api.v1.management.HeartbeatResponse.prototype.getConfig = function() {
  return /** @type{?proto.sensory.api.v1.management.ServerConfig} */ (
    jspb.Message.getWrapperField(this, proto.sensory.api.v1.management.ServerConfig, 1));
};


/**
 * @param {?proto.sensory.api.v1.management.ServerConfig|undefined} value
 * @return {!proto.sensory.api.v1.management.HeartbeatResponse} returns this
*/
proto.sensory.api.v1.management.HeartbeatResponse.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.HeartbeatResponse} returns this
 */
proto.sensory.api.v1.management.HeartbeatResponse.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.HeartbeatResponse.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.management.UserSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.management.UserSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.management.UserSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.UserSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.management.UserSummary}
 */
proto.sensory.api.v1.management.UserSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.management.UserSummary;
  return proto.sensory.api.v1.management.UserSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.management.UserSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.management.UserSummary}
 */
proto.sensory.api.v1.management.UserSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.management.UserSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.management.UserSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.management.UserSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.UserSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.sensory.api.v1.management.UserSummary.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sensory.api.v1.management.UserSummary} returns this
 */
proto.sensory.api.v1.management.UserSummary.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.management.DeviceSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.management.DeviceSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.management.DeviceSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.DeviceSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.management.DeviceSummary}
 */
proto.sensory.api.v1.management.DeviceSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.management.DeviceSummary;
  return proto.sensory.api.v1.management.DeviceSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.management.DeviceSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.management.DeviceSummary}
 */
proto.sensory.api.v1.management.DeviceSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.management.DeviceSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.management.DeviceSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.management.DeviceSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.DeviceSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.sensory.api.v1.management.DeviceSummary.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sensory.api.v1.management.DeviceSummary} returns this
 */
proto.sensory.api.v1.management.DeviceSummary.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.management.DeviceEnrollmentConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.management.DeviceEnrollmentConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.management.DeviceEnrollmentConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.DeviceEnrollmentConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    securitylevel: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.management.DeviceEnrollmentConfig}
 */
proto.sensory.api.v1.management.DeviceEnrollmentConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.management.DeviceEnrollmentConfig;
  return proto.sensory.api.v1.management.DeviceEnrollmentConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.management.DeviceEnrollmentConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.management.DeviceEnrollmentConfig}
 */
proto.sensory.api.v1.management.DeviceEnrollmentConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensory.api.v1.management.DeviceEnrollmentSecurityLevels} */ (reader.readEnum());
      msg.setSecuritylevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.management.DeviceEnrollmentConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.management.DeviceEnrollmentConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.management.DeviceEnrollmentConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.DeviceEnrollmentConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecuritylevel();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional DeviceEnrollmentSecurityLevels securityLevel = 1;
 * @return {!proto.sensory.api.v1.management.DeviceEnrollmentSecurityLevels}
 */
proto.sensory.api.v1.management.DeviceEnrollmentConfig.prototype.getSecuritylevel = function() {
  return /** @type {!proto.sensory.api.v1.management.DeviceEnrollmentSecurityLevels} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensory.api.v1.management.DeviceEnrollmentSecurityLevels} value
 * @return {!proto.sensory.api.v1.management.DeviceEnrollmentConfig} returns this
 */
proto.sensory.api.v1.management.DeviceEnrollmentConfig.prototype.setSecuritylevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.management.DataPersistenceLocalConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.management.DataPersistenceLocalConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.management.DataPersistenceLocalConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.DataPersistenceLocalConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    localpath: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.management.DataPersistenceLocalConfig}
 */
proto.sensory.api.v1.management.DataPersistenceLocalConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.management.DataPersistenceLocalConfig;
  return proto.sensory.api.v1.management.DataPersistenceLocalConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.management.DataPersistenceLocalConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.management.DataPersistenceLocalConfig}
 */
proto.sensory.api.v1.management.DataPersistenceLocalConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalpath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.management.DataPersistenceLocalConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.management.DataPersistenceLocalConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.management.DataPersistenceLocalConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.DataPersistenceLocalConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocalpath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string localPath = 1;
 * @return {string}
 */
proto.sensory.api.v1.management.DataPersistenceLocalConfig.prototype.getLocalpath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.DataPersistenceLocalConfig} returns this
 */
proto.sensory.api.v1.management.DataPersistenceLocalConfig.prototype.setLocalpath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.management.DataPersistenceS3Config.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.management.DataPersistenceS3Config} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.toObject = function(includeInstance, msg) {
  var f, obj = {
    s3accesskey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    s3secretkey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    s3region: jspb.Message.getFieldWithDefault(msg, 3, ""),
    s3bucket: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.management.DataPersistenceS3Config}
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.management.DataPersistenceS3Config;
  return proto.sensory.api.v1.management.DataPersistenceS3Config.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.management.DataPersistenceS3Config} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.management.DataPersistenceS3Config}
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setS3accesskey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setS3secretkey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setS3region(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setS3bucket(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.management.DataPersistenceS3Config.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.management.DataPersistenceS3Config} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getS3accesskey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getS3secretkey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getS3region();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getS3bucket();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string s3AccessKey = 1;
 * @return {string}
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.prototype.getS3accesskey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.DataPersistenceS3Config} returns this
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.prototype.setS3accesskey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string s3SecretKey = 2;
 * @return {string}
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.prototype.getS3secretkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.DataPersistenceS3Config} returns this
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.prototype.setS3secretkey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string s3Region = 3;
 * @return {string}
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.prototype.getS3region = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.DataPersistenceS3Config} returns this
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.prototype.setS3region = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string s3Bucket = 4;
 * @return {string}
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.prototype.getS3bucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.DataPersistenceS3Config} returns this
 */
proto.sensory.api.v1.management.DataPersistenceS3Config.prototype.setS3bucket = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.management.ServerListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.management.ServerListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.management.ServerListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.ServerListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.management.ServerListRequest}
 */
proto.sensory.api.v1.management.ServerListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.management.ServerListRequest;
  return proto.sensory.api.v1.management.ServerListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.management.ServerListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.management.ServerListRequest}
 */
proto.sensory.api.v1.management.ServerListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.management.ServerListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.management.ServerListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.management.ServerListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.ServerListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string tenantId = 1;
 * @return {string}
 */
proto.sensory.api.v1.management.ServerListRequest.prototype.getTenantid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.ServerListRequest} returns this
 */
proto.sensory.api.v1.management.ServerListRequest.prototype.setTenantid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensory.api.v1.management.ServerListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.management.ServerListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.management.ServerListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.management.ServerListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.ServerListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    serversList: jspb.Message.toObjectList(msg.getServersList(),
    proto.sensory.api.v1.management.ServerResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.management.ServerListResponse}
 */
proto.sensory.api.v1.management.ServerListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.management.ServerListResponse;
  return proto.sensory.api.v1.management.ServerListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.management.ServerListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.management.ServerListResponse}
 */
proto.sensory.api.v1.management.ServerListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sensory.api.v1.management.ServerResponse;
      reader.readMessage(value,proto.sensory.api.v1.management.ServerResponse.deserializeBinaryFromReader);
      msg.addServers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.management.ServerListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.management.ServerListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.management.ServerListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.ServerListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sensory.api.v1.management.ServerResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ServerResponse servers = 1;
 * @return {!Array<!proto.sensory.api.v1.management.ServerResponse>}
 */
proto.sensory.api.v1.management.ServerListResponse.prototype.getServersList = function() {
  return /** @type{!Array<!proto.sensory.api.v1.management.ServerResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensory.api.v1.management.ServerResponse, 1));
};


/**
 * @param {!Array<!proto.sensory.api.v1.management.ServerResponse>} value
 * @return {!proto.sensory.api.v1.management.ServerListResponse} returns this
*/
proto.sensory.api.v1.management.ServerListResponse.prototype.setServersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sensory.api.v1.management.ServerResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensory.api.v1.management.ServerResponse}
 */
proto.sensory.api.v1.management.ServerListResponse.prototype.addServers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sensory.api.v1.management.ServerResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensory.api.v1.management.ServerListResponse} returns this
 */
proto.sensory.api.v1.management.ServerListResponse.prototype.clearServersList = function() {
  return this.setServersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensory.api.v1.management.ServerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensory.api.v1.management.ServerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.ServerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isremote: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    clusterid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    clustername: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tenantid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    tenantname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    health: (f = msg.getHealth()) && common_common_pb.ServerHealthResponse.toObject(includeInstance, f),
    system: (f = msg.getSystem()) && common_common_pb.SystemSummary.toObject(includeInstance, f),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastheardfrom: (f = msg.getLastheardfrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensory.api.v1.management.ServerResponse}
 */
proto.sensory.api.v1.management.ServerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensory.api.v1.management.ServerResponse;
  return proto.sensory.api.v1.management.ServerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensory.api.v1.management.ServerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensory.api.v1.management.ServerResponse}
 */
proto.sensory.api.v1.management.ServerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsremote(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setClustername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantname(value);
      break;
    case 8:
      var value = new common_common_pb.ServerHealthResponse;
      reader.readMessage(value,common_common_pb.ServerHealthResponse.deserializeBinaryFromReader);
      msg.setHealth(value);
      break;
    case 9:
      var value = new common_common_pb.SystemSummary;
      reader.readMessage(value,common_common_pb.SystemSummary.deserializeBinaryFromReader);
      msg.setSystem(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastheardfrom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensory.api.v1.management.ServerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensory.api.v1.management.ServerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensory.api.v1.management.ServerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsremote();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getClusterid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getClustername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTenantid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTenantname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getHealth();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_common_pb.ServerHealthResponse.serializeBinaryToWriter
    );
  }
  f = message.getSystem();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_common_pb.SystemSummary.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastheardfrom();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
 */
proto.sensory.api.v1.management.ServerResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
 */
proto.sensory.api.v1.management.ServerResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool isRemote = 3;
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.getIsremote = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
 */
proto.sensory.api.v1.management.ServerResponse.prototype.setIsremote = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string clusterId = 4;
 * @return {string}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.getClusterid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
 */
proto.sensory.api.v1.management.ServerResponse.prototype.setClusterid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string clusterName = 5;
 * @return {string}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.getClustername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
 */
proto.sensory.api.v1.management.ServerResponse.prototype.setClustername = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string tenantId = 6;
 * @return {string}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.getTenantid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
 */
proto.sensory.api.v1.management.ServerResponse.prototype.setTenantid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string tenantName = 7;
 * @return {string}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.getTenantname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
 */
proto.sensory.api.v1.management.ServerResponse.prototype.setTenantname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional sensory.api.common.ServerHealthResponse health = 8;
 * @return {?proto.sensory.api.common.ServerHealthResponse}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.getHealth = function() {
  return /** @type{?proto.sensory.api.common.ServerHealthResponse} */ (
    jspb.Message.getWrapperField(this, common_common_pb.ServerHealthResponse, 8));
};


/**
 * @param {?proto.sensory.api.common.ServerHealthResponse|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
*/
proto.sensory.api.v1.management.ServerResponse.prototype.setHealth = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
 */
proto.sensory.api.v1.management.ServerResponse.prototype.clearHealth = function() {
  return this.setHealth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.hasHealth = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional sensory.api.common.SystemSummary system = 9;
 * @return {?proto.sensory.api.common.SystemSummary}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.getSystem = function() {
  return /** @type{?proto.sensory.api.common.SystemSummary} */ (
    jspb.Message.getWrapperField(this, common_common_pb.SystemSummary, 9));
};


/**
 * @param {?proto.sensory.api.common.SystemSummary|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
*/
proto.sensory.api.v1.management.ServerResponse.prototype.setSystem = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
 */
proto.sensory.api.v1.management.ServerResponse.prototype.clearSystem = function() {
  return this.setSystem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.hasSystem = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp createdAt = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
*/
proto.sensory.api.v1.management.ServerResponse.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
 */
proto.sensory.api.v1.management.ServerResponse.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp updatedAt = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
*/
proto.sensory.api.v1.management.ServerResponse.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
 */
proto.sensory.api.v1.management.ServerResponse.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Timestamp lastHeardFrom = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.getLastheardfrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
*/
proto.sensory.api.v1.management.ServerResponse.prototype.setLastheardfrom = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensory.api.v1.management.ServerResponse} returns this
 */
proto.sensory.api.v1.management.ServerResponse.prototype.clearLastheardfrom = function() {
  return this.setLastheardfrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensory.api.v1.management.ServerResponse.prototype.hasLastheardfrom = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * @enum {number}
 */
proto.sensory.api.v1.management.Void = {
  VOID_VALUE: 0
};

/**
 * @enum {number}
 */
proto.sensory.api.v1.management.DeviceEnrollmentSecurityLevels = {
  NONE: 0,
  SECRET_KEY: 1,
  SIGNED_TOKEN: 2
};

goog.object.extend(exports, proto.sensory.api.v1.management);
