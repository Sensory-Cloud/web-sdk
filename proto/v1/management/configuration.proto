// sensory.api.management
syntax = "proto3";

package sensory.api.v1.management;

option go_package = "gitlab.com/sensory-cloud/server/titan.git/pkg/api/v1/management";
option java_multiple_files = true;
option java_package = "io.sensory.api.v1.management";
option java_outer_classname = "SensoryApiV1ManagementConfigurationProto";

import "validate/validate.proto";

// Serivce to manage tenant configuration, such as available models and license
service ConfigurationService {
  // Get file configuration for a tenant
  // Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
  rpc GetFileConfiguration (FileConfigurationRequest) returns (FileConfigurationResponse) {}

  // Upsert file configuration for a tenant
  // Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
  rpc UpsertFileConfiguration (UpsertFileConfigurationRequest) returns (FileConfigurationResponse) {}
}

// Message to get a tenant's file configuration
message FileConfigurationRequest {
  // The tenant ID as UUID
  string tenantId = 1 [(validate.rules).string.uuid = true];
}

// Message to upsert a tenant's file configuration
message UpsertFileConfigurationRequest {
  // The tenant ID as UUID
  string tenantId = 1 [(validate.rules).string.uuid = true];
  // The file configuration
  FileConfig config = 2;
}

message FileConfigurationResponse {
  // The file configuration
  FileConfig config = 1;
}

// Configuration specifying a list of files that are enabled for this server
message FileConfig {
  // A list of files
  repeated File files = 1;

  // A configured file definition
  message File {
    // A unique, absolute file name
    string absolutePath = 1;
    // A regex pattern matches files
    string pattern = 2;
  }
}
