// sensory.api.management
syntax = "proto3";

package sensory.api.v1.management;

option go_package = "gitlab.com/sensory-cloud/server/titan.git/pkg/api/v1/management";
option java_multiple_files = true;
option java_package = "io.sensory.api.v1.management";
option java_outer_classname = "SensoryApiV1ManagementTenantProto";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "v1/management/client.proto";
import "v1/management/cluster.proto";

// Service to manage Tenants in the database
service TenantService {
  // Initialize a tenant along with a new server and OAuth client
  // Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
  rpc InitializeTenant (InitializeTenantRequest) returns (InitializeTenantResponse) {}
  // Obtains a summary of tenants
  // Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
  rpc GetTenantList(TenantListRequest) returns (TenantListResponse) {}
  // Obtains a single tenant
  // Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
  rpc GetTenant(TenantGetRequest) returns (TenantResponse) {}
}

// Request to initialize a tenant along with a new server and OAuth client
message InitializeTenantRequest {
  // Tenant-specific request details
  TenantRequest tenant = 1 [(validate.rules).message.required = true];
  // OAuth client-specific request details
  CreateGenericClientRequest client = 2 [(validate.rules).message.required = true];
  // Server-specific request details
  ClusterRequest cluster = 3 [(validate.rules).message.required = true];
}

// Request to create a new tenant
message TenantRequest {
   // The unique name for this tenant
  string name = 1 [(validate.rules).string = {min_len: 1, max_len: 127}];
}

// Request for a summary of tenant
message TenantListRequest { }

// Request to obtain a single tenant by ID
message TenantGetRequest {
  // Tenant ID
  string id = 1 [(validate.rules).string.uuid = true];
}

// Response to a Tenant list request
message TenantListResponse {
  repeated TenantResponse tenants = 1;
}

// Response to a tenant initialization request
message InitializeTenantResponse {
  // Tenant-specific response details
  TenantResponse tenant = 1;
  // OAuth client-specific response details
  ClientResponse client = 2;
  // Cluster-specific response details
  ClusterResponse cluster = 3;
}

// Tenant response
message TenantResponse {
  // The unique uuid for this tenant
 string id = 1;
  // The unique name for this tenant
 string name = 2;
 // Created timestamp
 google.protobuf.Timestamp createdAt = 3;
 // Last updated timestamp
 google.protobuf.Timestamp updatedAt = 4;
}
